// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Common from "./Common.res.mjs";
import * as Spider from "./games/Spider.res.mjs";
import * as Pyramid from "./games/Pyramid.res.mjs";
import * as FreeCell from "./games/FreeCell.res.mjs";
import * as Klondike from "./games/Klondike.res.mjs";
import * as EastHaven from "./games/EastHaven.res.mjs";
import * as UpAndDown from "./games/UpAndDown.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function gameString(a) {
  return a;
}

var allGames = [
  "Klondike",
  "Free Cell",
  "Free Cell: 2 Deck",
  "Baker's Game",
  "Up & Down",
  "Spider: One Suit",
  "Spider: Two Suit",
  "Spider: Four Suit",
  "Scorpion",
  "Simple Simon",
  "Pyramid",
  "East Haven"
];

function GameBrowser(props) {
  var match = Common.useLocalStorage("gametype", "Klondike");
  var setSelectGameType = match[1];
  var selectGameType = match[0];
  var tmp;
  switch (selectGameType) {
    case "Klondike" :
        tmp = JsxRuntime.jsx(Klondike.Game.make, {
              id: selectGameType
            });
        break;
    case "Free Cell" :
        tmp = JsxRuntime.jsx(FreeCell.OneDeck.make, {
              id: selectGameType
            });
        break;
    case "Free Cell: 2 Deck" :
        tmp = JsxRuntime.jsx(FreeCell.TwoDeck.make, {
              id: selectGameType
            });
        break;
    case "Baker's Game" :
        tmp = JsxRuntime.jsx(FreeCell.BakersGame.make, {
              id: selectGameType
            });
        break;
    case "Up & Down" :
        tmp = JsxRuntime.jsx(UpAndDown.Game.make, {
              id: selectGameType
            });
        break;
    case "Spider: One Suit" :
        tmp = JsxRuntime.jsx(Spider.OneSuit.make, {
              id: selectGameType
            });
        break;
    case "Spider: Two Suit" :
        tmp = JsxRuntime.jsx(Spider.TwoSuit.make, {
              id: selectGameType
            });
        break;
    case "Spider: Four Suit" :
        tmp = JsxRuntime.jsx(Spider.FourSuit.make, {
              id: selectGameType
            });
        break;
    case "Scorpion" :
        tmp = JsxRuntime.jsx(Spider.Scorpion.make, {
              id: selectGameType
            });
        break;
    case "Pyramid" :
        tmp = JsxRuntime.jsx(Pyramid.Game.make, {
              id: selectGameType
            });
        break;
    case "Simple Simon" :
        tmp = JsxRuntime.jsx(Spider.SimpleSimon.make, {
              id: selectGameType
            });
        break;
    case "East Haven" :
        tmp = JsxRuntime.jsx(EastHaven.Game.make, {
              id: selectGameType
            });
        break;
    
  }
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx("div", {
                              children: "tom & won's card games",
                              className: "mb-1 text-white font-medium tracking-widest "
                            }),
                        JsxRuntime.jsx("div", {
                              children: JsxRuntime.jsx("select", {
                                    children: allGames.map(function (v) {
                                          return JsxRuntime.jsx("option", {
                                                      children: v,
                                                      value: v
                                                    }, v);
                                        }),
                                    className: "px-2 py-1 rounded text-sm",
                                    value: selectGameType,
                                    onChange: (function ($$event) {
                                        setSelectGameType(function (param) {
                                              return $$event.target.value;
                                            });
                                      })
                                  }),
                              className: "flex flex-row gap-5 text-xl"
                            })
                      ],
                      className: "px-5 pt-3"
                    }),
                tmp
              ],
              className: " bg-gradient-to-tl from-green-900 to-green-700 h-dvh"
            });
}

var make = GameBrowser;

export {
  gameString ,
  allGames ,
  make ,
}
/* Common Not a pure module */
