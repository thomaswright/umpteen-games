// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Common from "./Common.res.mjs";
import * as MrsMop from "./games/MrsMop.res.mjs";
import * as Spider from "./games/Spider.res.mjs";
import * as Penguin from "./games/Penguin.res.mjs";
import * as Pyramid from "./games/Pyramid.res.mjs";
import * as Alhambra from "./Alhambra.res.mjs";
import * as Diplomat from "./games/Diplomat.res.mjs";
import * as EightOff from "./games/EightOff.res.mjs";
import * as Fortress from "./games/Fortress.res.mjs";
import * as Klondike from "./games/Klondike.res.mjs";
import * as Scorpion from "./games/Scorpion.res.mjs";
import * as EastHaven from "./games/EastHaven.res.mjs";
import * as UpAndDown from "./games/UpAndDown.res.mjs";
import * as AgnesSorel from "./games/AgnesSorel.res.mjs";
import * as BakersGame from "./games/BakersGame.res.mjs";
import * as GayGordons from "./games/GayGordons.res.mjs";
import * as Stalactite from "./games/Stalactite.res.mjs";
import * as SimpleSimon from "./games/SimpleSimon.res.mjs";
import * as AgnesBernauer from "./games/AgnesBernauer.res.mjs";
import * as GermanPatience from "./games/GermanPatience.res.mjs";
import * as SeahavenTowers from "./games/SeahavenTowers.res.mjs";
import * as FreeCellOneDeck from "./games/FreeCellOneDeck.res.mjs";
import * as FreeCellTwoDeck from "./games/FreeCellTwoDeck.res.mjs";
import * as StreetsAndAlleys from "./games/StreetsAndAlleys.res.mjs";
import * as BeleagueredCastle from "./games/BeleagueredCastle.res.mjs";
import * as GrandfathersClock from "./GrandfathersClock.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import LogoSvgreact from "./assets/logo.svg?react";

var make = LogoSvgreact;

var Logo = {
  make: make
};

function gameString(a) {
  return a;
}

var allGames = [
  "Klondike",
  "Free Cell",
  "Free Cell: 2 Deck",
  "Baker's Game",
  "Eight Off",
  "Seahaven Towers",
  "Penguin",
  "Up & Down",
  "Spider: One Suit",
  "Spider: Two Suit",
  "Spider: Four Suit",
  "Scorpion",
  "Simple Simon",
  "Mrs Mop",
  "Pyramid",
  "East Haven",
  "Stalactite",
  "German Patience",
  "Gay Gordon's",
  "Agnes Sorel",
  "Agnes Bernauer",
  "Diplomat",
  "Beleaguered Castle",
  "Fortress",
  "StreetsAndAlleys",
  "Alhambra",
  "Grandfathers Clock"
];

function GameBrowser(props) {
  var match = Common.useLocalStorage("gametype", "Klondike");
  var setSelectGameType = match[1];
  var selectGameType = match[0];
  var tmp;
  switch (selectGameType) {
    case "Klondike" :
        tmp = JsxRuntime.jsx(Klondike.Game.make, {
              id: selectGameType
            });
        break;
    case "Free Cell" :
        tmp = JsxRuntime.jsx(FreeCellOneDeck.Game.make, {
              id: selectGameType
            });
        break;
    case "Free Cell: 2 Deck" :
        tmp = JsxRuntime.jsx(FreeCellTwoDeck.Game.make, {
              id: selectGameType
            });
        break;
    case "Baker's Game" :
        tmp = JsxRuntime.jsx(BakersGame.Game.make, {
              id: selectGameType
            });
        break;
    case "Eight Off" :
        tmp = JsxRuntime.jsx(EightOff.Game.make, {
              id: selectGameType
            });
        break;
    case "Seahaven Towers" :
        tmp = JsxRuntime.jsx(SeahavenTowers.Game.make, {
              id: selectGameType
            });
        break;
    case "Penguin" :
        tmp = JsxRuntime.jsx(Penguin.Game.make, {
              id: selectGameType
            });
        break;
    case "Up & Down" :
        tmp = JsxRuntime.jsx(UpAndDown.Game.make, {
              id: selectGameType
            });
        break;
    case "Spider: One Suit" :
        tmp = JsxRuntime.jsx(Spider.OneSuit.make, {
              id: selectGameType
            });
        break;
    case "Spider: Two Suit" :
        tmp = JsxRuntime.jsx(Spider.TwoSuit.make, {
              id: selectGameType
            });
        break;
    case "Spider: Four Suit" :
        tmp = JsxRuntime.jsx(Spider.FourSuit.make, {
              id: selectGameType
            });
        break;
    case "Scorpion" :
        tmp = JsxRuntime.jsx(Scorpion.Game.make, {
              id: selectGameType
            });
        break;
    case "Pyramid" :
        tmp = JsxRuntime.jsx(Pyramid.Game.make, {
              id: selectGameType
            });
        break;
    case "Simple Simon" :
        tmp = JsxRuntime.jsx(SimpleSimon.Game.make, {
              id: selectGameType
            });
        break;
    case "Mrs Mop" :
        tmp = JsxRuntime.jsx(MrsMop.Game.make, {
              id: selectGameType
            });
        break;
    case "East Haven" :
        tmp = JsxRuntime.jsx(EastHaven.Game.make, {
              id: selectGameType
            });
        break;
    case "Stalactite" :
        tmp = JsxRuntime.jsx(Stalactite.Game.make, {
              id: selectGameType
            });
        break;
    case "German Patience" :
        tmp = JsxRuntime.jsx(GermanPatience.Game.make, {
              id: selectGameType
            });
        break;
    case "Gay Gordon's" :
        tmp = JsxRuntime.jsx(GayGordons.Game.make, {
              id: selectGameType
            });
        break;
    case "Agnes Sorel" :
        tmp = JsxRuntime.jsx(AgnesSorel.Game.make, {
              id: selectGameType
            });
        break;
    case "Agnes Bernauer" :
        tmp = JsxRuntime.jsx(AgnesBernauer.Game.make, {
              id: selectGameType
            });
        break;
    case "Diplomat" :
        tmp = JsxRuntime.jsx(Diplomat.Game.make, {
              id: selectGameType
            });
        break;
    case "Beleaguered Castle" :
        tmp = JsxRuntime.jsx(BeleagueredCastle.Game.make, {
              id: selectGameType
            });
        break;
    case "Fortress" :
        tmp = JsxRuntime.jsx(Fortress.Game.make, {
              id: selectGameType
            });
        break;
    case "StreetsAndAlleys" :
        tmp = JsxRuntime.jsx(StreetsAndAlleys.Game.make, {
              id: selectGameType
            });
        break;
    case "Alhambra" :
        tmp = JsxRuntime.jsx(Alhambra.Game.make, {
              id: selectGameType
            });
        break;
    case "Grandfathers Clock" :
        tmp = JsxRuntime.jsx(GrandfathersClock.Game.make, {
              id: selectGameType
            });
        break;
    
  }
  return JsxRuntime.jsx("div", {
              children: JsxRuntime.jsxs("div", {
                    children: [
                      JsxRuntime.jsxs("div", {
                            children: [
                              JsxRuntime.jsx("div", {
                                    children: JsxRuntime.jsx(make, {}),
                                    className: "h-10 w-10 mr-1"
                                  }),
                              JsxRuntime.jsx("div", {
                                    children: "Umpteen Games",
                                    className: " font-black  text-4xl text-[var(--light)] tracking-tight"
                                  }),
                              JsxRuntime.jsx("div", {
                                    children: JsxRuntime.jsx("select", {
                                          children: allGames.map(function (v) {
                                                return JsxRuntime.jsx("option", {
                                                            children: v,
                                                            value: v
                                                          }, v);
                                              }),
                                          className: "px-2 py-1 rounded text-sm bg-[var(--light)] text-[var(--green3)]",
                                          value: selectGameType,
                                          onChange: (function ($$event) {
                                              setSelectGameType(function (param) {
                                                    return $$event.target.value;
                                                  });
                                            })
                                        }),
                                    className: "flex flex-row gap-5 text-xl ml-10"
                                  })
                            ],
                            className: "flex flex-row items-center  py-1 px-5 bg-[var(--green3)] "
                          }),
                      tmp
                    ]
                  }),
              className: " bg-[var(--green1)] h-dvh font-sans overflow-scroll"
            });
}

var make$1 = GameBrowser;

export {
  Logo ,
  gameString ,
  allGames ,
  make$1 as make,
}
/* make Not a pure module */
