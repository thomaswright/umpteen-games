// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "../Card.res.mjs";
import * as Bases from "../Bases.res.mjs";
import * as Boards from "../Boards.res.mjs";
import * as Common from "../Common.res.mjs";
import * as GameBase from "../GameBase.res.mjs";
import * as Core__Array from "@rescript/core/src/Core__Array.res.mjs";
import * as GameCommons from "../GameCommons.res.mjs";

function initiateGame() {
  var shuffledDeck = Core__Array.toShuffled(Card.getDeck(0, false));
  var deckToDeal = {
    contents: shuffledDeck
  };
  deckToDeal.contents = Core__Array.filterMap(deckToDeal.contents, (function (v) {
          var c = v.card;
          if (c.rank === "R2" && c.suit === "Hearts" || c.rank === "R3" && c.suit === "Spades" || c.rank === "R4" && c.suit === "Diamonds" || c.rank === "R5" && c.suit === "Clubs" || c.rank === "R6" && c.suit === "Hearts" || c.rank === "R7" && c.suit === "Spades" || c.rank === "R8" && c.suit === "Diamonds" || c.rank === "R9" && c.suit === "Clubs" || c.rank === "R10" && c.suit === "Hearts" || c.rank === "RJ" && c.suit === "Spades" || c.rank === "RQ" && c.suit === "Diamonds" || c.rank === "RK" && c.suit === "Clubs") {
            return ;
          } else {
            return v;
          }
        }));
  var tableau = [
    Common.ArrayAux.popN(deckToDeal, 5),
    Common.ArrayAux.popN(deckToDeal, 5),
    Common.ArrayAux.popN(deckToDeal, 5),
    Common.ArrayAux.popN(deckToDeal, 5),
    Common.ArrayAux.popN(deckToDeal, 5),
    Common.ArrayAux.popN(deckToDeal, 5),
    Common.ArrayAux.popN(deckToDeal, 5),
    Common.ArrayAux.popN(deckToDeal, 5)
  ];
  return [
          shuffledDeck,
          {
            tableau: tableau,
            foundations: [
              [{
                  card: {
                    suit: "Hearts",
                    rank: "R10",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Spades",
                    rank: "RJ",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Diamonds",
                    rank: "RQ",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Clubs",
                    rank: "RK",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Hearts",
                    rank: "R2",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Spades",
                    rank: "R3",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Diamonds",
                    rank: "R4",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Clubs",
                    rank: "R5",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Hearts",
                    rank: "R6",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Spades",
                    rank: "R7",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Diamonds",
                    rank: "R8",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Clubs",
                    rank: "R9",
                    deck: 0
                  },
                  hidden: false
                }]
            ],
            foundations2: [],
            stock: [],
            waste: [],
            free: []
          }
        ];
}

function foundationRules(game, pile, card, i, j) {
  var isLast = j === (pile.length - 1 | 0);
  return {
          locationAdjustment: {
            x: 0,
            y: 0,
            z: j + 1 | 0
          },
          baseSpace: {
            TAG: "Foundation",
            _0: i
          },
          dragPile: (function () {
              if (j === (game.foundations.length - 1 | 0)) {
                return [card];
              }
              
            }),
          autoProgress: (function () {
              return "DoNothing";
            }),
          droppedUpon: (function (game, dragPile) {
              var justOne = dragPile.length === 1;
              var dragPileBase = dragPile[0];
              if (isLast && justOne && dragPileBase.card.suit === card.card.suit && Card.rankIsAboveCyclic(dragPileBase, card) && dragPileBase.card.rank !== Card.getNumberedRankCyclic(i + 1 | 0)) {
                return {
                        tableau: GameCommons.flipLastUp(game.tableau),
                        foundations: game.foundations.map(function (stack) {
                              return Common.ArrayAux.insertAfter(stack, card, dragPile);
                            }),
                        foundations2: game.foundations2,
                        stock: game.stock,
                        waste: game.waste,
                        free: game.free
                      };
              }
              
            }),
          onStateChange: (function (element) {
              Card.showOrHide(card, element);
            }),
          onClick: (function (param) {
              
            })
        };
}

var forEachSpace = Bases.GrandfathersClock.makeForEachSpace(undefined, undefined, undefined, foundationRules, undefined, undefined, undefined, undefined, undefined, undefined, undefined);

var Game = GameBase.Create({
      game_encode: Bases.GrandfathersClock.game_encode,
      game_decode: Bases.GrandfathersClock.game_decode,
      deck_encode: Bases.GrandfathersClock.deck_encode,
      deck_decode: Bases.GrandfathersClock.deck_decode,
      getSpace: Bases.GrandfathersClock.getSpace,
      spaceToString: Bases.GrandfathersClock.spaceToString,
      initiateGame: initiateGame,
      forEachSpace: forEachSpace,
      removeDragFromGame: Bases.GrandfathersClock.removeDragFromGame,
      winCheck: Bases.GrandfathersClock.winCheck,
      applyLiftToDragPile: Bases.GrandfathersClock.applyLiftToDragPile,
      applyMoveToDragPile: Bases.GrandfathersClock.applyMoveToDragPile,
      Board: Boards.FT_Clock,
      AllCards: Bases.GrandfathersClock.AllCards
    });

export {
  Game ,
}
/* Game Not a pure module */
