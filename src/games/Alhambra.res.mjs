// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Card from "../Card.res.mjs";
import * as Bases from "../Bases.res.mjs";
import * as Rules from "../Rules.res.mjs";
import * as Boards from "../Boards.res.mjs";
import * as Common from "../Common.res.mjs";
import * as GameBase from "../GameBase.res.mjs";
import * as Core__Array from "@rescript/core/src/Core__Array.res.mjs";

function initiateGame() {
  var shuffledDeck = Core__Array.toShuffled([].concat(Card.getDeck(0, false), Card.getDeck(1, false)));
  var deckToDeal = {
    contents: shuffledDeck
  };
  deckToDeal.contents = Core__Array.filterMap(deckToDeal.contents, (function (v) {
          if ((v.card.rank === "RA" || v.card.rank === "RK") && v.card.deck === 0) {
            return ;
          } else {
            return v;
          }
        }));
  var free = [
    Common.ArrayAux.popN(deckToDeal, 1)[0],
    Common.ArrayAux.popN(deckToDeal, 1)[0],
    Common.ArrayAux.popN(deckToDeal, 1)[0],
    Common.ArrayAux.popN(deckToDeal, 1)[0],
    Common.ArrayAux.popN(deckToDeal, 1)[0],
    Common.ArrayAux.popN(deckToDeal, 1)[0],
    Common.ArrayAux.popN(deckToDeal, 1)[0],
    Common.ArrayAux.popN(deckToDeal, 1)[0]
  ];
  var stock = [Card.hideAfter(deckToDeal.contents, 0)];
  return [
          shuffledDeck,
          {
            tableau: [],
            foundations: [
              [{
                  card: {
                    suit: "Spades",
                    rank: "RA",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Hearts",
                    rank: "RA",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Diamonds",
                    rank: "RA",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Clubs",
                    rank: "RA",
                    deck: 0
                  },
                  hidden: false
                }]
            ],
            foundations2: [
              [{
                  card: {
                    suit: "Spades",
                    rank: "RK",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Hearts",
                    rank: "RK",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Diamonds",
                    rank: "RK",
                    deck: 0
                  },
                  hidden: false
                }],
              [{
                  card: {
                    suit: "Clubs",
                    rank: "RK",
                    deck: 0
                  },
                  hidden: false
                }]
            ],
            stock: stock,
            waste: [],
            free: free
          }
        ];
}

var forEachSpace = Bases.Alhambra.makeForEachSpace(undefined, undefined, undefined, undefined, undefined, undefined, Rules.WasteRotation.stackedBuildWasteRules, Rules.WasteRotation.stockBaseRules, Rules.WasteRotation.stockRules, undefined, Rules.FreeCell.freeRules);

var Game = GameBase.Create({
      game_encode: Bases.Alhambra.game_encode,
      game_decode: Bases.Alhambra.game_decode,
      deck_encode: Bases.Alhambra.deck_encode,
      deck_decode: Bases.Alhambra.deck_decode,
      getSpace: Bases.Alhambra.getSpace,
      spaceToString: Bases.Alhambra.spaceToString,
      initiateGame: initiateGame,
      forEachSpace: forEachSpace,
      removeDragFromGame: Bases.Alhambra.removeDragFromGame,
      winCheck: Bases.Alhambra.winCheck,
      applyLiftToDragPile: Bases.Alhambra.applyLiftToDragPile,
      applyMoveToDragPile: Bases.Alhambra.applyMoveToDragPile,
      Board: Boards.SWFFR,
      AllCards: Bases.Alhambra.AllCards
    });

export {
  Game ,
}
/* Game Not a pure module */
